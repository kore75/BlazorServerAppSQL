@page "/userdata/details"
@inject BlazorServerAppSQL.Model.BookingDataContext DB
@using BlazorServerAppSQL.Model
@inject NavigationManager NavigationManager
@using BlazorServerAppSQL.ViewModel
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>UserData</h4>
    <hr />
    @if (userdata is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FullName</dt>
            <dd class="col-sm-10">@userdata.FullName</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@userdata.Email</dd>
            <dt class="col-sm-2">EmploymentDate</dt>
            <dd class="col-sm-10">@userdata.EmploymentDate</dd>
            <dt class="col-sm-2">Salary</dt>
            <dd class="col-sm-10">@userdata.Salary</dd>
            <dt class="col-sm-2">UserCategory</dt>
            <dd class="col-sm-10">@userdata.UserCategory</dd>
        </dl>
        <div>
            <a href="@($"/userdata/edit?userdataid={userdata.UserDataId}")">Edit</a> |
            <a href="@($"/userdata")">Back to List</a>
        </div>
    }
</div>

@code {
    UserDataDto? userdata;

    [SupplyParameterFromQuery]
    public int UserDataId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ViewModelBooking viewModelBooking = new ViewModelBooking(DB);
        userdata = await viewModelBooking.GetUserDataDtosById(UserDataId);

        if (userdata is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
