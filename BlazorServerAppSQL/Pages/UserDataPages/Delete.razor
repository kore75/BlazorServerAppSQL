@page "/userdata/delete"
@inject BlazorServerAppSQL.Model.BookingDataContext DB
@using BlazorServerAppSQL.Model
@inject NavigationManager NavigationManager
@using BlazorServerAppSQL.ViewModel
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>UserData</h4>
    <hr />
    @if (userdata is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FullName</dt>
            <dd class="col-sm-10">@userdata.FullName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@userdata.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EmploymentDate</dt>
            <dd class="col-sm-10">@userdata.EmploymentDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Salaray</dt>
            <dd class="col-sm-10">@userdata.Salary</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UserCategory</dt>
            <dd class="col-sm-10">@userdata.UserCategory</dd>
        </dl>
        <EditForm method="post" Model="userdata" OnValidSubmit="DeleteUserData" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(userdata is null)">Delete</button> |
            <a href="/userdata">Back to List</a>
        </EditForm>
    }
</div>

@code {
    UserDataDto? userdata;

    [SupplyParameterFromQuery]
    public int UserDataId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ViewModelBooking viewModelBooking = new ViewModelBooking(DB);
        userdata = await viewModelBooking.GetUserDataDtosById(UserDataId);

        if (userdata is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteUserData()
    {
        UserData udata = new UserData { UserDataId = userdata!.UserDataId };
        DB.UserDatas.Attach(udata);
        DB.Entry(udata).State = EntityState.Deleted;
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/userdata");
    }
}
